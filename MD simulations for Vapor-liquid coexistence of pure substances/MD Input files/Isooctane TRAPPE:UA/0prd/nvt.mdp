;OPLS eth-water NPT equilibration 

; Run parameters
integrator              = md        ; leap-frog integrator
nsteps                  = 1000000     ; 0.002 * 100000 = 200 ps
dt                      = 0.002     ; 2 fs

; Output control
nstxout                 = 5000       ; save coordinates every 1.0 ps
nstvout                 = 5000       ; save velocities every 1.0 ps
nstenergy               = 1       ; save energies every 1.0 ps
nstlog                  = 1       ; update log file every 1.0 ps

; Bond parameters
continuation            = no        ; first dynamics run
constraint_algorithm    = lincs     ; holonomic constraints 
constraints             = all-bonds   ; bonds involving H are constrained
lincs_iter              = 3         ; accuracy of LINCS
lincs_order             = 12         ; also related to accuracy

; Nonbonded settings 
cutoff-scheme           = Verlet    ; Buffered neighbor searching
verlet-buffer-tolerance = 5.0e-05
ns_type                 = grid      ; search neighboring grid cells
nstlist                 = 10        ; 20 fs, largely irrelevant with Verlet
rlist			        = 1.0
rcoulomb                = 2.3       ; short-range electrostatic cutoff (in nm)
rvdw                    = 2.3      ; short-range van der Waals cutoff (in nm)
DispCorr                = Ener  ; account for cut-off vdW scheme

; Electrostatics
coulombtype             = Cut-off       ; Particle Mesh Ewald for long-range electrostatics
fourierspacing          = 0.16      ; grid spacing for FFT

; tcoupl is implicitly handled by the sd integrator
tcoupl                   = V-rescale          ; modified Berendsen thermostat
tc_grps                  = system
tau_t                    = 0.4
ref_t                    = 400

;compressibility         = 0.0 4.5e-5                ; isothermal compressibility of water, bar^-1
;refcoord_scaling        = com

; Periodic boundary conditions
pbc                     = xyz       ; 3-D PBC
; Velocity generation
gen_vel                 = yes       ; assign velocities from Maxwell distribution
gen_temp                = 400       ; temperature for Maxwell distribution
gen_seed                = -1        ; generate a random seed

